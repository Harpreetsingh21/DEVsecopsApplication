version: 0.2

env:
  secrets-manager:
    TOKEN: firstSecret:tokenForSonar
    SNYK_TOKEN: secondSecret:tokenForSnyk

phases:
  install:
    runtime-versions:
      java: latest
    commands:
      - echo "Installing dependencies for SAST and SCA"
      - curl -sL https://snyk.io/install | bash
      - chmod +x ./gradlew

  pre_build:
    commands:
      # SonarCloud SAST scan
      - echo "Starting SAST scan with SonarCloud..."
      - ./gradlew sonarqube -Dsonar.projectKey=devsecopsapplication -Dsonar.organization=devsecopsapplication -Dsonar.host.url=https://sonarcloud.io -Dsonar.token=$TOKEN
      - quality_status=$(curl -s -u $TOKEN: https://sonarcloud.io/api/qualitygates/project_status?projectKey=devsecopsapplication | jq -r '.projectStatus.status')
      - echo "SonarCloud analysis status is $quality_status"
     #- if [ "$quality_status" = "ERROR" ]; then exit 1; fi

  build:
    commands:
      # Snyk SCA scan
      - echo "Starting SCA scan with Snyk..."
      - export $SNYK_TOKEN
      - snyk auth $SNYK_TOKEN
      - snyk test --all-projects || exit 1

  post_build:
    commands:
      # OWASP ZAP DAST scan
      - echo "Starting DAST scan with OWASP ZAP..."
      - apt-get update -y
      - apt-get install -y wget default-jdk
      - wget https://github.com/zaproxy/zaproxy/releases/download/v2.15.0/ZAP_2.15.0_Linux.tar.gz
      - tar -xvf ZAP_2.15.0_Linux.tar.gz
      - cd ZAP_2.15.0
      - ./zap.sh -cmd -quickurl https://example.com -quickprogress -quickout ../zap_report.html

artifacts:
  files:
    - zap_report.html


